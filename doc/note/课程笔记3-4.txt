vue-cli项目运行：

从入口文件index.html看，css和js会被动态插入到该文件中。
build目录  //最终发布的代码存放的位置

页面的入口js文件是main.js。从import App from './App'可以看到main.js是依赖APP.vue这个文件。

组件文件后缀名为.vue。每个组件分为3个部分，分别是template、script和style。
App组件，由三部分构成，<template></template>、<script></script>、<style></style>

src目录下：
asset  //放置一些图片
components  //组件目录，用于放置一些组件
router  //路由文件
App.vue  //项目组件入口，可以将组件都写在里面
main.js  //项目的核心js文件（入口js文件）


export default是vue提供的一个语法糖，可以通过一个{}来定义一个组件。例如：
export default {
  
	name: 'HelloWorld',
  // 组件名称
	data () {
    
		return {
      
			msg: 'Welcome to Your Vue.js App'
    
		}
  	
	}

}


router目录下的index.js：先是使用import把需要使用路由的组件引入 需要注意的就是 from 后面需要带上'@/'
例如：import HelloWorld from '@/components/HelloWorld'


在创建的 router 对象中，如果不配置 mode，就会使用默认的 hash 模式，该模式下会将路径格式化为 #! 开头。
添加 mode: 'history' 之后将使用 HTML5 history 模式，该模式下没有 # 前缀，而且可以使用 pushState 和 replaceState 来管理记录。


App.vue中：
<div id="app">
  <h1>Hello App!</h1>
  <p>
    <!-- 使用 router-link 组件来导航. -->
    <!-- 通过传入 `to` 属性指定链接. -->
    <!-- <router-link> 默认会被渲染成一个 `<a>` 标签 -->
    <router-link to="/foo">Go to Foo</router-link>
    <router-link to="/bar">Go to Bar</router-link>
  </p>
  <!-- 路由出口 -->
  <!-- 路由匹配到的组件将渲染在这里 -->
  <router-view></router-view>
</div>



vue-router 简单入门实例
用vue.js+vue-router可创建单页应用。使用vue.js我们已经可以通过组合组件来组成应用程序，当需要把vue-router添加进来，我们需要做：
将组件(components)映射到路由(router),然后告诉vue-router在哪里渲染它们。

------------------------------------------------------------------------
HTML:

<script src="https://unpkg.com/vue/dist/vue.js"></script>
<script src="https://unpkg.com/vue-router/dist/vue-router.js"></script>

<div id="app">
    <h1>Hello CAOJIALI!</h1>
    <p>
        <!-- 使用router-link组件来导航 -->
        <!-- 通过传入 'to' 属性指定链接。 -->
        <!-- <router-link> 默认会被渲染成一个 '<a>' 标签 --。>
        <router-link to="/foo">CAOJIALI</router-link>
        <router-link to="/bar">lovely girl</router-link>
    </p>
    <!-- 路由出口 -->
    <!-- 路由匹配到的组件将渲染在这里 -->
    <router-view></router-view>
</div>

------------------------------------------------------------------------
JavaScript:

// 1. 定义(路由)组件，在router/index.js中
// 可以从其他文件 import 进来
import goods from '@/components/goods/goods';
import seller from '@/components/seller/seller';
import ratings from '@/components/ratings/ratings';

// 2. 定义路由
// 每个路由应该映射一个组件。 其中 "component" 可以是
// 通过Vue.extend()创建的组件构造器，
// 或者，只是一个组件配置对象。
// 晚点再讨论嵌套路由
const routes = [
    {
      path: '/goods',
      name: 'goods',
      component: goods
    },
    {
      path: '/seller',
      name: 'seller',
      component: seller
    },
    {
      path: '/ratings',
      name: 'ratings',
      component: ratings
    }
  ]
// 3.创建 router 实例，然后传 'routes' 配置
// 还可以传别的配置参数，不过先简单一点。
const router = new VueRouter({
    routes // 缩写。相当于 routes: routes
})

// 4. 创建和挂载根实例。在main.js文件中。
// 记得要通过 router 配置参数注入路由，
// 从而让整个应用都有路由功能
import router from './router';
new Vue({
  el: '#app',
  router,
  components: { App },
  template: '<App/>'
});

