mock数据（模拟后台数据）

data.json文件。是模拟后台数据的一个文件。

接口数据的设计主要依赖页面的内容。


seller是商家相关的数据。
goods是商品相关的数据。
ratings是评论的数据。

在新版本的Vue开发中，通过vue-cli创建的build文件夹下面已经没有了旧版本中的dev-server.js文件，
新版本的vue已将dev-server.js与webpack.dev.conf.js合并，
若要写路由相关配置需要找到webpack.dev.conf.js中的devServer对象进行相关配置。

第一步，在const portfinder = require(‘portfinder’)后添加
//第一步
const express = require('express')
const app = express()//请求server
var appData = require('../data.json')//加载本地数据文件
var seller = appData.seller//获取对应的本地数据
var goods = appData.goods
var ratings = appData.ratings
var apiRoutes = express.Router()
app.use('/api', apiRoutes)//通过路由请求数据


第二步：找到devServer,在里面加上before（）方法
devServer: {
    clientLogLevel: 'warning',
    historyApiFallback: true,
    hot: true,
    compress: true,
    host: HOST || config.dev.host,
    port: PORT || config.dev.port,
    open: config.dev.autoOpenBrowser,
    overlay: config.dev.errorOverlay
      ? { warnings: false, errors: true }
      : false,
    publicPath: config.dev.assetsPublicPath,
    proxy: config.dev.proxyTable,
    quiet: true, // necessary for FriendlyErrorsPlugin
    watchOptions: {
      poll: config.dev.poll,
    },
    //第二步找到devServer,在里面添加
before(app) {
  app.get('/api/seller', (req, res) => {
    res.json({
      errno: 0,
      data: seller
    })//接口返回json数据，上面配置的数据seller就赋值给data请求后调用
  }),
  app.get('/api/goods', (req, res) => {
    res.json({
      errno: 0,
      data: goods
    })
  }),
  app.get('/api/ratings', (req, res) => {
    res.json({
      errno: 0,
      data: ratings
    })
  })
}
  }