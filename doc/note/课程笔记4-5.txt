mock数据（模拟后台数据）

data.json文件。是模拟后台数据的一个文件。

接口数据的设计主要依赖页面的内容。


seller是商家相关的数据。
goods是商品相关的数据。
ratings是评论的数据。

在新版本的Vue开发中，通过vue-cli创建的build文件夹下面已经没有了旧版本中的dev-server.js文件，
新版本的vue已将dev-server.js与webpack.dev.conf.js合并，
若要写路由相关配置需要找到webpack.dev.conf.js中的devServer对象进行相关配置。

第一步，在
-----------------------------------------------------------
const HOST = process.env.HOST
const PORT = process.env.PORT && Number(process.env.PORT)
-----------------------------------------------------------
后添加以下代码：
// 通过express导入路由
const express = require('express');
// 请求server
const app = express();
// 加载本地数据文件
var appData = require('../data.json');
// json卖家数据
var seller = appData.seller;
// json商品数据
var goods = appData.goods;
// json评论数据
var ratings = appData.ratings;
// 编写路由
var apiRouter = express.Router();
// 所有通过接口相关的api都会通过api这个路由导向到具体的路由
app.use('/api',apiRouter);// 通过路由请求数据


每个路由文件通过生成一个 express.Router 实例 router 并导出，通过 app.use 挂载到不同的路径。


第二步：找到devServer项,在里面加上before（）方法
devServer: {
    before(app){
      app.get('/api/seller', function (req, res) {
        // 服务端收到请求后返回给客户端一个json数据
        res.json({
          // 当我们数据正常时，我们通过传递errno字符为0表示数据正常
          errno: 0,
          // 返回json中的卖家数据
          data: seller
        });
      })
      app.get('/api/goods', function (req, res) {
        res.json({
          errno: 0,
          data: goods
        })
      })
      app.get('/api/ratings', function (req, res) {
        res.json({
          errno: 0,
          data: ratings
        })
      })
    }
}

当请求路径不存在将自动跳转到
http://localhost:8080/goods