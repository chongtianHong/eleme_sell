详情弹层页（2）

接下来将为浮层添加内容。

在写布局之前，首先了解一下什么是sticky footers。
打开链接：http://www.w3cplus.com/css3/css-secrets/sticky-footers.html
它可以概括如下：如果页面内容不够长的时候，页脚块粘贴在视窗底部；
如果内容足够长时，页脚块会被内容向下推送。


解决这类问题，Flexbox是最完美的方案。
我们只需要几行CSS代码就可以完美的实现，而且不需要一些奇怪的计算或添加额外的HTML元素。
重点是：使用flex弹性盒模型布局，页眉和页脚设置高度
在页头和页脚设置高度，但主题内容的高度自动伸缩的来适配剩余空间。可以在<main>上设置flex值=1.
父级元素设置display: flex; flex-flow: column; min-height: 100vh;

项目中使用的方法是：
需要三个层：一个层detail包内容，一个内容detail-wrapper，一个层底部detail-close
在detail里面定义两个层，
分别是存放内容的容器detail-wrapper（需要清除浮动）和定在视窗底部的层detail-close（关闭按钮）
<div v-show="detailShow" class="detail">
      <div class="detail-wrapper clearfix">
        <div class="detail-main"></div>
      </div>
      <div class="detail-close">×</div>
</div>
接下来可以开始写样式。

clearfix是比较通用的样式
.clearfix{
  display: inline-block;
  &:after{
    display: block;
    content: ".";
    height: 0;
    line-height: 0;
    clear: both;
    visibility: hidden;
  }
}
不是很清楚为啥这里要清除浮动，因为类名为detail-main的元素也没使用float浮动。
发现将<div class="detail-wrapper clearfix">中的clearfix类名去掉，detail-wrapper整个层向下发生了偏移。
clearfix复习：
在一个有float 属性元素的外层增加一个拥有clearfix属性的div包裹，
可以保证外部div的height，即清除"浮动元素脱离了文档流，
包围图片和文本的 div 不占据空间"的问题。在标准浏览器下，
.clearfix:after这个伪类会在应用到.clearfix的元素后面插入一个clear: both的块级元素，从而达到清除浮动的作用。

detail-wrapper实际上是一个外层容器，其高度时随着其内容的高度而增加的。而最小高度应该是和视窗高度一样高的。
因此设置
.detail-wrapper{ // 外层容器
    min-height: 100%;
  }
现在写detail-main里面的样式，查看设计稿发现，需要设置一个magin-top（非sticky-foot布局必须的）和padding-bottom（sticky-foot必须的）：
.detail-main{
      margin-top: 64px;
      padding-bottom: 64px; // 固定套路
    }
使用padding-bottom为×撑开高度，使得×不会覆盖在文字上方。

detail-close实际上是一个×按钮。
    .detail-close{ // 固定套路
      position: relative;
      width: 32px;
      height: 32px;
      margin: -64px auto 0 auto;
      clear: both;
      font-size: 32px;
    }

以上则完成了css sticky-footers的布局，如果页面内容不够长的时候，页脚块粘贴在视窗底部；
如果内容足够长时，页脚块会被内容向下推送。

为×添加点击事件，点击时，关闭浮层。