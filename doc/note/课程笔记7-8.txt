better-scroll运用（3）

将scrollY和左侧的索引做一个映射。
这里用到vue的一个特性，计算属性，
在计算属性里面定义一个方法：currentIndex：
computed: {
    currentIndex () {
      for (let i = 0; i < this.listHeight.length; i++) {
        let height1 = this.listHeight[i];    //区间的上界
        let height2 = this.listHeight[i + 1];//区间的下界
        if (!height2 || (this.scrollY >= height1 && this.scrollY < height2)) {
          return i;
        }
      }
      return 0;
    }
  },
当scrollY变化时，computed的currentIndex就会实时发生变化。

因此拿到currentIndex以后，因此在menu-item的div里面绑定一个class。
这个class的值是一个对象，
<li v-for="(item,index) in goods" :key="index" class="menu-item" :class="{'current':currentIndex === index}">
也就说遍历goods时，有一个index，当currentIndex === index时，就会被设置一个class名为'current'的样式。

接下来在menu-item里面写样式：（背景变化、字体颜色变化，向上偏移）
.menu-item{
      display: table;
      height: 54px;
      width: 56px;
      padding: 0 12px;
      &.current{
        position: relative;
        z-index: 10;
        margin-top: 1px;
        background: #fff;
        font-weight: 700;
      }

接下来看到，滚动右栏的时候，左边对应的栏的样式发生了变化。

然而发现，第一个“热销榜”的样式没有变化，定位错误：
在currentIndex()里面修改（少了个等于号），上闭下开：
if (!height2 || (this.scrollY >= height1 && this.scrollY < height2)) {
          return i;
}

接下来实现点击左侧，右侧滚动到相应的位置。
因此在menu-wrapper下的li里面绑定点击事件：
<li v-for="(item,index) in goods" :key="index" class="menu-item" :class="{'current':currentIndex === index}" @click="selectMenu(index)">

在methods里面定义方法：
selectMenu(index) {
      console.log(index);
    },
在左栏点击时，并没有效果。因为better-scroll会阻止一切的默认事件，这是和better-scroll在初始化时，需要传递一个属性有关。
this.menuScroll = new BScroll(this.$refs.menuWrapper, {
        click: true
      });
传递了之后就可以点击。

为了统一移动端和pc端，点击只发生一次，因此要在selectMenu再传入一个事件。
<li v-for="(item,index) in goods" :key="index" class="menu-item" :class="{'current':currentIndex === index}" @click="selectMenu(index,$event)">
在methods里面定义方法：
selectMenu(index, event) {
      if(!event._constructed){ // better-scroll派发的事件
        return;
      }
      //console.log(index);
},
就能实现pc和移动端的点击事件只发生一次。

selectMenu (index, event) {
      if (!event._constructed) { // better-scroll派发的事件
        return;
      }
      let foodList = this.$refs.foodsWrapper.getElementsByClassName('food-list-hook');
      let el = foodList[index];
      this.foodScroll.scrollToElement(el, 300);
      //console.log(index);
},
以上则实现了左右列表的联动。

总结：
1.通过在标签中定义属性ref="name"，然后可以在vue中通过this.$refs.name获得该原生dom对象。
2.当要计算与dom相关的东西时候，要保证dom已经渲染了。因此在操作相关dom时，应该使用this.$nextTick(),渲染后的操作应该放在该函数执行的回调函数里面。

下面的小节将实现购物车的购买功能。