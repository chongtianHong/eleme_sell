shopcart购物车组件（1）

接下来将实现购物车的购买功能。

先到resource/标注/外卖01_商品页_spec.png下面看设计稿。对购物车的需求进行分析。

购物车的实现通过新增一个子组件shopcart.vue。
在template中定义一个class为shopcart的div。
在script中通过export default {}便于被父组件引入。

接下来在goods组件里面引入shopcart.vue组件。
import shopcart from '../shopcart/shopcart';
同时需要在goods组件的vue实例里面添加一个components属性注册shopcart组件。
components: {
    shopcart
},
因此就可以在模板中使用这个组件。
<div class="menu-wrapper" ref="menuWrapper"></div>
<div class="foods-wrapper" ref="foodsWrapper"></div>
<shopcart></shopcart>

接下来在shopcart.vue中进行购物车布局的开发。
该布局定位在viewport的底部。因此使用fixed布局。
先到shopcart.vue中写结构。
<div class="shopcart">
      <div class="content">
          <div class="content-left"></div>
          <div class="content-right"></div>  
      </div>
</div>
右边宽度固定，左边宽度自适应。（通过使用flex布局）

<div class="content-left">
              <div class="logo-wrapper">
                  <div class="logo">
                      <span class="icon-shopping_cart"></span>
                  </div>
              </div>
              <div class="price"></div>
              <div class="desc"></div>
</div>
与logo-wrapper同级的还有两个区块，分别是price和配送费区块。

接下来开始写样式。
.icon-shopping_cart{
  display: inline-block;
  width: 100%;
  height: 100%;
  background-image: url('cart.png.png');
  background-size: cover;
}
.shopcart{
  position: fixed;
  left: 0;
  bottom: 0;
  z-index: 50;
  width: 100%;
  height: 48px;
}
以上就完成了购物车组件的定位。