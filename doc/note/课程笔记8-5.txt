商品详情页实现（5）

接下来将实现点击具体的food，弹出商品的详情页。
即开发商品的详情页。

接下来实现加入购物车按钮。
当购买商品为空时，出现加入购物车按钮，即buy结构。
当购买商品个数不为0时，出现购物车cartcontrol组件，即cartcontrol-wrapper结构。
在food.vue里面写着两个结构。
先引入cartcontrol：
import cartcontrol from '../cartcontrol/cartcontrol';
并在vue中注册它：
components: {
    cartcontrol
  },
接下来写cartcontrol-wrapper和buy的结构，与content平级：
<div class="cartcontrol-wrapper">
       <cartcontrol  :food="food"></cartcontrol>
</div>
<div class="buy" v-show="!food.count || food.count===0">加入购物车</div>

接下来写样式。
    .cartcontrol-wrapper{
        position: absolute;
        right: 24px;
        bottom: 24px;
    }
    .buy{
        position: absolute;
        right: 22px;
        bottom: 22px;
        z-index: 10;
        height: 24px;
        line-height: 24px;
        padding: 0 12px;
        box-sizing: border-box;
        border-radius: 12px;
        font-size: 10px;
        color: #fff;
        background: rgb(0,160,220);
    }

接下来实现，当点击加入购物车时，实现添加商品。
<div class="buy" v-show="!food.count || food.count===0" @click="addFirst">加入购物车</div>
引入vue：
import Vue from 'vue';
写addFirst方法：
addFirst (event) {
      if (!event._constructed) { // 去掉自带click事件的点击
        return;
      }
      Vue.set(this.food, 'count', 1);
}
即实现了加入购物车的点击效果。

接下来为加入购物车按钮的消失实现一个动画。
<transition name="fade">
    <div class="buy" v-show="!food.count || food.count===0" @click.stop.prevent="addFirst">加入购物车</div>
</transition>
写样式：
.buy{
        transition: all 0.2s linear;
        opacity: 1;
        &.fade-enter,&.fade-leave{
            opacity: 0;
        }
}
则实现了动画效果。

接下来将继续写下面部分的样式。