外部组件（2）

布局写好了接下来开始写样式。
.header{
  color:#fff;
  background: #000;
  .content-wrapper{
    padding: 24px 12px 18px 24px;
    .avatar{
      display: inline-block;
    }
    .content{
      display: inline-block;
    }
  }
}

发现avatar和content之间有一个空白字符的间隔，因此父级元素.content-wrapper设置font-size:0;

接下来写title部分。title由brand和text组成。在img/里面找到图片，拷贝到header组件的目录下。
组件设计原则是组件依赖的图片都要放到组件中去维护。

由于brand是一个span，指定宽高没用，所以要设置成inline-block：
.content{
      display: inline-block;
      margin-left: 16px;
      font-size: 14px;
      .title{
        margin: 2px 0 8px 0;
        .brand{
          display: inline-block;
          width: 30px;
          height: 18px;
        }
      }
    }
接下来给brand设置背景。由于brand有2x和3x，在本项目中默认使用2x。
如果要在实际中对应不同的dpr使用不同的背景，则可以用到stylus的mixin特性（此处不考虑）

background-size是css3中新增的属性，
background-size的cover特定值会保持图像本身的宽高比例，将图片缩放到正好完全覆盖定义背景的区域。
.brand{
    display: inline-block;
    width: 30px;
    height: 18px;
    background: url('brand@2x.png') no-repeat;
    background-size: cover;
    // background-size: 30px 18px;
}
写商家名的样式：
.name{
          margin-left: 6px;
          font-size: 16px;
          font-weight: bold;
          line-height:18px;
}
发现文字和图片没有对齐，因此brand需要设置样式。
vertical-align:top;


title写完了可以写description的样式。
在reset.css里面设置body，html的默认样式，例如font-weight:200等，就不用每次都要对各个元素设置font-weight值

