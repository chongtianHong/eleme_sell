详情弹层页（3）

上一节完成了css sticky-footers的布局，如果页面内容不够长的时候，页脚块粘贴在视窗底部；
如果内容足够长时，页脚块会被内容向下推送。

接下来写内容部分。即填充detail-main区块。
包含了标题部分、评星、副标题等。

先写标题部分：
<div class="detail-main">
          <h1 class="name">{{seller.name}}</h1>
</div>
接下来根据设计稿（记得设计稿中的像素值要除以2），为其写样式：
先给detail-wrapper写宽度，设置为100%。
.name{
          font-size: 16px;
          font-weight 700;
          line-height: 16px;
          text-align: center;
        }

接下来写评星部分，在data.json里面看到，seller.score=4.2；

发现星星组件在评价页、浮层都有使用，因此可以用组件的形式实现，实现复用。
接下来则开始实现星星组件，在components下创建一个star目录。
接下来在star.vue里面写结构和样式。

切入点：使用vue的v-for的属性，实现星星数量的灵活展示。
由于star有不同的尺寸，所以要给class名为star的标签绑定一个starType的class。
而里面的内容是span，通过v-for去遍历一个itemClasses的数组。
然后为每个span绑定对应的itemClass的类名。每个span还有统一的一个class名为star-item
<div class="star" :class="starType">
        <span v-for="(itemClass,index) in itemClasses" :class="itemClass" class="star-item" :key="index"></span>
</div>
vue文档规定使用v-for后最好给它绑定一个key,所以再写个:key="your codes"即可,如：
<span v-for="(itemClass,index) in itemClasses" :class="itemClass" class="star-item" :key="index"></span>

由于star有不同的大小尺寸，这是外部传进来的，因此应该提供一个对外传入的接口，使用props属性来定义。
在header组件中，将size="48"传递给star组件：
<div class="star-wrapper">
            <star :score="seller.score" :size="48"></star>
</div>
而在star组件中，定义props项：
props: { // 从外层接收两个参数，size和score。
        size: {
            type: Number
        },
        score: {
            type: Number
        }
},
由于前面提到的starType应该就是通过外部传入的size来形成的，因此要定义一个公式，
把传过来的size和score映射成一个类型。
因此使用vue的一个computed属性。
computed: {
        starType () {
            return "star-" + this.size;
        }
    }
接下来开始写样式：
.star{
    font-size: 0;
    .star-item{ // 表示每个span的基础class
        display: inline-block;
        background-repeat: no-repeat
    }
    &.star-48{ //与star同级
        .star-item{
            width: 20px;
            height: 20px;
            margin-right: 22px;
        }
        &:last-child{
            margin-right: 0;
        }
        .on{
            background: url('star48_on@2x.png');
            background-size: cover;
        }
        .half{
            background: url('star48_half@2x.png');
            background-size: cover;
        }
        .off{
            background: url('star48_off@2x.png');
            background-size: cover;
        }
    }
    &.star-36{}
    &.star-24{}
}